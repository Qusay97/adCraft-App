{"version":3,"sources":["style/cooking.mp4","style/signup.png","components/SignUp.jsx","Signup.js","components/SignIn.jsx","Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SignUp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","firstName","lastName","phoneNumber","password","gender","errorPhone","errorPassword","validation","e","target","setState","defineProperty","name","value","console","log","length","react_default","a","createElement","className","index_es","src","PNG","width","height","variant","align","style","color","label","required","margin","onChange","handleChange","bind","fullWidth","type","placeholder","gutterBottom","autoComplete","marginTop","component","aria-label","control","onClick","handleOnClick","backgroundColor","size","textTransform","React","Component","Signup","show","children","onClose","class","SignUp_SignUp","SignIn","onSubmit","marginBottom","Login","SignIn_SignIn","App","toggleSignup","isOpenSignUp","isOpenSignIn","toggleLogin","_this2","href","to","loop","autoPlay","video","id","src_Signup","src_Login","simple_sidenav","showNav","simple_sidenav_default","onHideNav","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.47e3771f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cooking.a05ecb9a.mp4\";","module.exports = __webpack_public_path__ + \"static/media/signup.1d6e49e2.png\";","import React from \"react\";\nimport \"../style/styles.css\";\nimport {\n  Paper,\n  Button,\n  FormLabel,\n  TextField,\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Typography\n} from \"@material-ui/core\";\nimport PNG from '../style/signup.png';\n\nexport default class SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      phoneNumber: \"\",\n      password: \"\",\n      gender: \"male\",\n      errorPhone: \"\",\n      errorPassword: \"\",\n      validation: true\n    };\n  }\n  // this function to deal eith the textField and get the data\n  handleChange(e) {\n    let target = e.target;\n    this.setState({ [target.name]: target.value });\n    console.log(this.state[target.name]);\n\n    // validation to  phone number\n    if (this.state.phoneNumber.length < 10) {\n      this.setState({\n        errorPhone: \"The phone number should be in this format 0790011200\",\n        validation: false\n      });\n    } else {\n      this.setState({\n        errorPhone: \"\",\n        validation: true\n      });\n    }\n    // validation to  password\n    if (this.state.password.length <= 8) {\n      this.setState({\n        errorPassword: \"The password should be more than 8 character!\",\n        validation: false\n      });\n    } else {\n      this.setState({\n        errorPassword: \"\",\n        validation: true\n      });\n    }\n  }\n\n  // handle when click to send info to server\n  handleOnClick() {\n    // if the validation true  send data\n    if (this.state.validation) {\n      console.log(this.state);\n    } else {\n    }\n  }\n  render() {\n    // const style = {\n    //   padding: \"15px\",\n    //   margin: \"40px\",\n    //   maxWidth: \"500px\",\n    //   display: \"inline - block\"\n    // };\n    // const btnStyle = { padding: \"10px\", marginTop: \"10px\", fontSize: \"18px\" };\n    // const container = { display: \"flex\", justifyContent: \"center\" };\n    return (\n      <div className=\"container\">\n        <Paper className=\"style\">\n          <div>\n          <img src={PNG} width=\"100\" height=\"100\"/>\n            <Typography className=\"_Signup\" variant=\"display2\" align=\"center\" style={{\"color\": \"#006789\"}}>\n              Sign Up\n            </Typography>\n          </div>\n          <form >\n            <TextField\n              label=\"First Name\"\n              required={true}\n              name=\"firstName\"\n              margin=\"normal\"\n              value={this.state.firstName}\n              onChange={this.handleChange.bind(this)}\n              fullWidth\n            />\n            <TextField\n              label=\"Last Name\"\n              type=\"text\"\n              name=\"lastName\"\n              required={true}\n              margin=\"normal\"\n              value={this.state.lastName}\n              onChange={this.handleChange.bind(this)}\n              fullWidth\n            />\n\n            <TextField\n              label=\"Phone Number\"\n              type=\"number\"\n              required={true}\n              placeholder=\"0790022543\"\n              name=\"phoneNumber\"\n              margin=\"normal\"\n              value={this.state.phoneNumber}\n              onChange={this.handleChange.bind(this)}\n              fullWidth\n            />\n            <Typography\n              variant=\"caption\"\n              style={{color: \"#006789\"}}\n              gutterBottom\n              align=\"justify\"\n            >\n              {this.state.errorPhone}\n            </Typography>\n            <TextField\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              required={true}\n              margin=\"normal\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange.bind(this)}\n              fullWidth\n            />\n            <Typography\n              variant=\"caption\"\n              style={{color: \"#006789\"}}\n              gutterBottom\n              align=\"justify\"\n            >\n              {this.state.errorPassword}\n            </Typography>\n            <FormControl style={{ marginTop: \"10px\" }} component=\"fieldset\">\n              <FormLabel  style={{color: \"#006789\"}} component=\"legend\">Gender</FormLabel>\n              <RadioGroup\n                aria-label=\"Gender\"\n                value={this.state.gender}\n                onChange={this.handleChange.bind(this)}\n                name=\"gender\"\n              >\n                <FormControlLabel\n                  value=\"male\"\n                  control={<Radio style={{color: \"#006789\"}}/>}\n                  label=\"Male\"\n                />\n                <FormControlLabel\n                  value=\"female\"\n                  control={<Radio style={{color: \"#006789\"}}/>}\n                  label=\"Female\"\n                />\n              </RadioGroup>\n            </FormControl>\n            <Button\n              onClick={this.handleOnClick.bind(this)}\n              className=\"btnStyle\"\n              color=\"inherit\"\n              style={{backgroundColor: \"#006789\"}}\n              type=\"submit\"\n              fullWidth\n            >\n              Sign Up\n            </Button>\n          </form>\n          <Button\n            style={{\n              marginTop: \"15px\",\n              size: \"medium\",\n              textTransform: \"lowercase\"\n            }}\n            color=\"default\"\n            fullWidth\n          >\n            Already have an Account?\n          </Button>\n        </Paper>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './style/App.css';\nimport PropTypes from 'prop-types';\nimport signUpPic from './style/signup.png';\nimport SignUp from './components/SignUp.jsx';\n//import Login from './components/SignIn.jsx';\n\nclass Signup extends React.Component {\n  render() {\n    // Render blank if its false\n    if(!this.props.show) {\n      return null;\n    }\n\n    // sign up modal render file, as the modern type of web design\n    // declare node file as based on prototype node, anything that can be rendered: numbers, strings, elements or an array (or fragment) containing these types.\n    return (\n      <div className=\"backdrop\">\n        <div className=\"signUp\">\n          {this.props.children}\n\n          <div className=\"footer\">\n            <button onClick={this.props.onClose}>\n              X\n            </button>\n          </div>\n        <div class=\"forSignUp\">\n          <SignUp />\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// PropTypes was originally exposed as part of the React core module, and is commonly used with React components.\n// this asasigned to declare prototypal type that you want to use in components\nSignup.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  children: PropTypes.node\n};\n\nexport default Signup;\n","import React from \"react\";\nimport \"../style/styles.css\";\nimport {\n  Paper,\n  Button,\n  TextField,\n  FormControl,\n  Typography\n} from \"@material-ui/core\";\nimport PNG from '../style/signup.png';\n\nexport default class SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phoneNumber: \"\",\n      password: \"\",\n      errorPhone: \"\",\n      errorPassword: \"\",\n      validation: false\n    };\n  }\n  // this function to deal eith the textField and get the data\n  handleChange(e) {\n    let target = e.target;\n    this.setState({ [target.name]: target.value });\n    console.log(this.state[target.name]);\n\n    // validation to  phone number\n    if (this.state.phoneNumber.length < 10) {\n      this.setState({\n        errorPhone: \"The phone number in this format 0790011200\",\n        validation: false\n      });\n    } else {\n      this.setState({\n        errorPhone: \"\",\n        validation: true\n      });\n    }\n    // validation to  password\n    if (this.state.password.length < 8) {\n      this.setState({\n        errorPassword: \"The password should be more than 8 character!\",\n        validation: false\n      });\n    } else {\n      this.setState({\n        errorPassword: \"\",\n        validation: true\n      });\n    }\n  }\n\n  // handle when click to send info to server\n  handleOnClick() {\n    // if the validation true  send data\n    if (!this.state.validation) {\n      console.log(this.state);\n    } else {\n\n    }\n  }\n  render() {\n    // const style = {\n    //   padding: \"15px\",\n    //   margin: \"40px\",\n    //   maxWidth: \"500px\"\n    // };\n    // const btnStyle = { padding: \"10px\", marginTop: \"10px\", fontSize: \"18px\" };\n    // const container = {\n    //   display: \"flex\",\n    //   justifyContent: \"center\",\n    //   alignItems: \"center\"\n    // };\n    return (\n      <div className=\"container1\">\n        <Paper className=\"style1\">\n          <div>\n          <img src={PNG} width=\"100\" height=\"100\"/>\n            <Typography className=\"_Signin\" variant=\"display2\" align=\"center\" color=\"primary\" style={{\"color\": \"#006789\"}}>\n              Login\n            </Typography>\n          </div>\n          <form onSubmit={this.handleOnClick.bind(this)}>\n            <TextField\n              fullWidth\n              label=\"Phone Number\"\n              type=\"tel\"\n              required={true}\n              style={{marginTop: \"50px\"}}\n              placeholder=\"0790022543\"\n              name=\"phoneNumber\"\n              margin=\"normal\"\n              value={this.state.phoneNumber}\n              onChange={this.handleChange.bind(this)}\n            />\n            <Typography\n              variant=\"caption\"\n              style={{\"color\": \"#006789\"}}\n              gutterBottom\n              align=\"justify\"\n            >\n              {this.state.errorPhone}\n            </Typography>\n            <TextField\n              fullWidth\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              required={true}\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.handleChange.bind(this)}\n              style={{marginBottom: \"100px\"}}\n            />\n            <Typography\n              variant=\"caption\"\n              style={{\"color\": \"#006789\"}}\n              gutterBottom\n              align=\"justify\"\n            >\n              {this.state.errorPassword}\n            </Typography>\n\n            <Button\n              className=\"btnStyle1\"\n              variant=\"contained\"\n              type=\"submit\"\n              margin=\"normal\"\n              style={{backgroundColor: \"#006789\"}}\n              fullWidth\n            >\n              Sign In\n            </Button>\n          </form>\n          <Button\n            style={{\n              marginTop: \"15px\",\n              size: \"medium\",\n              textTransform: \"lowercase\"\n            }}\n            color=\"default\"\n            fullWidth\n          >\n            Create new account\n          </Button>\n        </Paper>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './style/App.css';\nimport PropTypes from 'prop-types';\nimport signUpPic from './style/signup.png';\nimport SignIn from './components/SignIn.jsx'\n\nclass Login extends React.Component {\n  render() {\n    // Render blank if its false\n    if(!this.props.show) {\n      return null;\n    }\n\n    // sign up modal render file, as the modern type of web design\n    // declare node file as based on prototype node, anything that can be rendered: numbers, strings, elements or an array (or fragment) containing these types.\n    return (\n      <div className=\"backdrop1\">\n        <div className=\"Login\">\n          {this.props.children}\n\n          <div className=\"footer1\">\n            <button onClick={this.props.onClose}>\n              X\n            </button>\n          </div>\n        <div class=\"forLogin\">\n          <SignIn />\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// PropTypes was originally exposed as part of the React core module, and is commonly used with React components.\n// this asasigned to declare prototypal type that you want to use in components\nLogin.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  children: PropTypes.node\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport './style/App.css';\nimport video from './style/cooking.mp4';\nimport {BrowserRouter as Router, Route, NavLink} from 'react-router-dom';\nimport Signup from './Signup.js';\nimport Login from './Login.js';\nimport SignIn from './components/SignIn.jsx';\nimport SignUp from './components/SignUp.jsx';\nimport SideNav, {MenuIcon} from 'react-simple-sidenav';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpenSignUp: false, isOpenSignIn: false };\n  }\n\n  toggleSignup = () => {\n    this.setState({\n      isOpenSignUp: !this.state.isOpenSignUp,\n      isOpenSignIn: false\n    });\n  }\n\n toggleLogin = () => {\n    this.setState({\n      isOpenSignIn: !this.state.isOpenSignIn,\n      isOpenSignUp: false\n    });\n  }\n\n  render() {\n    \n\n    return (\n      <body>\n        <div className=\"container center\">\n          <nav className=\"menu\">\n            <h1 className=\"menu__logo\">adCraft</h1>\n              <div className=\"menu__right\">\n                <ul className=\"menu__list\">\n                    <li className=\"menu__list-item\"><a className=\"menu__link\" href=\"https://www.facebook.com/ad.craft.79\"><i className=\"fa fa-facebook fa-lg\"></i></a></li>\n                    <li className=\"menu__list-item\"><a className=\"menu__link\" href=\"https://www.instagram.com/adcraft_advertisement/?hl=en\"><i className=\"fa fa-instagram fa-lg\"></i></a></li>\n                    <li className=\"menu__list-item\"><a className=\"menu__link\" href=\"https://twitter.com/adCraft20\"><i className=\"fa fa-twitter fa-lg\"></i></a></li>\n                    \n                    <li className=\"menu__list-item\"><a className=\"menu__link\" href=\"#\" onClick={this.toggleLogin}>Login</a></li>\n                    <li className=\"menu__list-item\"><a className=\"menu__link\" to=\"/sign-up\" onClick={this.toggleSignup}>SIGN UP</a></li>\n                </ul>\n             </div>\n          </nav>\n          <div className=\"video-container\">\n            <video width=\"300\" height=\"200\" loop autoPlay>\n              <source src={video} type=\"video/mp4\" />\n            </video>\n            <div className=\"content\">\n              <button id=\"myBtn\">USER</button>\n              <button id=\"myBtn1\">ADVERTISER</button>\n            </div>\n         </div>\n         <Signup show={this.state.isOpenSignUp}  onClose={this.toggleSignup}></Signup>\n         <Login show={this.state.isOpenSignIn}  onClose={this.toggleLogin}></Login>\n      </div>     \n      <MenuIcon onClick={() => this.setState({showNav: true})}/>\n\n        <SideNav\n          showNav = {this.state.showNav}\n          onHideNav = {() => this.setState({showNav: false})} />\n    </body>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}